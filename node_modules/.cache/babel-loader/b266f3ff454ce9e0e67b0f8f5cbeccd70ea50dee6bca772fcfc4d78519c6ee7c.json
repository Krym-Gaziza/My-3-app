{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0430\\\\Desktop\\\\my-3-app\\\\src\\\\hok\\\\withTimeTracking.js\";\n// withTimeTracking.js\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withTimeTracking = WrappedComponent => {\n  return class WithTimeTracking extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        timeSpent: 0,\n        currentTime: new Date().toLocaleTimeString() // Добавляем состояние для текущего времени\n      };\n    }\n    componentDidMount() {\n      this.timer = setInterval(() => {\n        this.setState(prevState => ({\n          timeSpent: this.props.isTrackingTime ? prevState.timeSpent + 1 : prevState.timeSpent,\n          currentTime: new Date().toLocaleTimeString() // Обновляем текущее время\n        }));\n      }, 1000);\n    }\n    componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n    render() {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        ...this.props,\n        timeSpent: this.props.isTrackingTime ? this.state.timeSpent : undefined,\n        currentTime: this.state.currentTime // Передаем текущее время в компонент\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n  };\n};\nexport default withTimeTracking;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","withTimeTracking","WrappedComponent","WithTimeTracking","constructor","args","state","timeSpent","currentTime","Date","toLocaleTimeString","componentDidMount","timer","setInterval","setState","prevState","props","isTrackingTime","componentWillUnmount","clearInterval","render","undefined","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/а/Desktop/my-3-app/src/hok/withTimeTracking.js"],"sourcesContent":["// withTimeTracking.js\r\nimport React, { Component } from 'react';\r\n\r\nconst withTimeTracking = (WrappedComponent) => {\r\n  return class WithTimeTracking extends Component {\r\n    state = {\r\n      timeSpent: 0,\r\n      currentTime: new Date().toLocaleTimeString(), // Добавляем состояние для текущего времени\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.timer = setInterval(() => {\r\n        this.setState((prevState) => ({\r\n          timeSpent: this.props.isTrackingTime ? prevState.timeSpent + 1 : prevState.timeSpent,\r\n          currentTime: new Date().toLocaleTimeString(), // Обновляем текущее время\r\n        }));\r\n      }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.timer);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          timeSpent={this.props.isTrackingTime ? this.state.timeSpent : undefined}\r\n          currentTime={this.state.currentTime} // Передаем текущее время в компонент\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withTimeTracking;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAIC,gBAAgB,IAAK;EAC7C,OAAO,MAAMC,gBAAgB,SAASL,SAAS,CAAC;IAAAM,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAA,KAC9CC,KAAK,GAAG;QACNC,SAAS,EAAE,CAAC;QACZC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAE;MAChD,CAAC;IAAA;IAEDC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC7B,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;UAC5BR,SAAS,EAAE,IAAI,CAACS,KAAK,CAACC,cAAc,GAAGF,SAAS,CAACR,SAAS,GAAG,CAAC,GAAGQ,SAAS,CAACR,SAAS;UACpFC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAE;QAChD,CAAC,CAAC,CAAC;MACL,CAAC,EAAE,IAAI,CAAC;IACV;IAEAQ,oBAAoBA,CAAA,EAAG;MACrBC,aAAa,CAAC,IAAI,CAACP,KAAK,CAAC;IAC3B;IAEAQ,MAAMA,CAAA,EAAG;MACP,oBACEpB,OAAA,CAACE,gBAAgB;QAAA,GACX,IAAI,CAACc,KAAK;QACdT,SAAS,EAAE,IAAI,CAACS,KAAK,CAACC,cAAc,GAAG,IAAI,CAACX,KAAK,CAACC,SAAS,GAAGc,SAAU;QACxEb,WAAW,EAAE,IAAI,CAACF,KAAK,CAACE,WAAY,CAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAEN;EACF,CAAC;AACH,CAAC;AAED,eAAexB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}