{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getImgProps\", {\n  enumerable: true,\n  get: function () {\n    return getImgProps;\n  }\n});\nconst _warnonce = require(\"./utils/warn-once\");\nconst _imageblursvg = require(\"./image-blur-svg\");\nconst _imageconfig = require(\"./image-config\");\nconst VALID_LOADING_VALUES = [\"lazy\", \"eager\", undefined];\nfunction isStaticRequire(src) {\n  return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n  return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n  return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nconst allImgs = new Map();\nlet perfObserver;\nfunction getInt(x) {\n  if (typeof x === \"undefined\") {\n    return x;\n  }\n  if (typeof x === \"number\") {\n    return Number.isFinite(x) ? x : NaN;\n  }\n  if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10);\n  }\n  return NaN;\n}\nfunction getWidths(param, width, sizes) {\n  let {\n    deviceSizes,\n    allSizes\n  } = param;\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n    const percentSizes = [];\n    for (let match; match = viewportWidthRe.exec(sizes); match) {\n      percentSizes.push(parseInt(match[2]));\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01;\n      return {\n        widths: allSizes.filter(s => s >= deviceSizes[0] * smallestRatio),\n        kind: \"w\"\n      };\n    }\n    return {\n      widths: allSizes,\n      kind: \"w\"\n    };\n  }\n  if (typeof width !== \"number\") {\n    return {\n      widths: deviceSizes,\n      kind: \"w\"\n    };\n  }\n  const widths = [...new Set(\n  // > This means that most OLED screens that say they are 3x resolution,\n  // > are actually 3x in the green color, but only 1.5x in the red and\n  // > blue colors. Showing a 3x resolution image in the app vs a 2x\n  // > resolution image will be visually the same, though the 3x image\n  // > takes significantly more data. Even true 3x resolution screens are\n  // > wasteful as the human eye cannot see that level of detail without\n  // > something like a magnifying glass.\n  // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n  [width, width * 2 /*, width * 3*/].map(w => allSizes.find(p => p >= w) || allSizes[allSizes.length - 1]))];\n  return {\n    widths,\n    kind: \"x\"\n  };\n}\nfunction generateImgAttrs(param) {\n  let {\n    config,\n    src,\n    unoptimized,\n    width,\n    quality,\n    sizes,\n    loader\n  } = param;\n  if (unoptimized) {\n    return {\n      src,\n      srcSet: undefined,\n      sizes: undefined\n    };\n  }\n  const {\n    widths,\n    kind\n  } = getWidths(config, width, sizes);\n  const last = widths.length - 1;\n  return {\n    sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n    srcSet: widths.map((w, i) => loader({\n      config,\n      src,\n      quality,\n      width: w\n    }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({\n      config,\n      src,\n      quality,\n      width: widths[last]\n    })\n  };\n}\nfunction getImgProps(param, _state) {\n  let {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill = false,\n    style,\n    onLoad,\n    onLoadingComplete,\n    placeholder = \"empty\",\n    blurDataURL,\n    fetchPriority,\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...rest\n  } = param;\n  const {\n    imgConf,\n    showAltText,\n    blurComplete,\n    defaultLoader\n  } = _state;\n  let config;\n  let c = imgConf || _imageconfig.imageConfigDefault;\n  if (\"allSizes\" in c) {\n    config = c;\n  } else {\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b);\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b);\n    config = {\n      ...c,\n      allSizes,\n      deviceSizes\n    };\n  }\n  let loader = rest.loader || defaultLoader;\n  // Remove property so it's not spread on <img> element\n  delete rest.loader;\n  delete rest.srcSet;\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = (\"__next_img_default\" in loader);\n  if (isDefaultLoader) {\n    if (config.loader === \"custom\") {\n      throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader;\n    loader = obj => {\n      const {\n        config: _,\n        ...opts\n      } = obj;\n      return customImageLoader(opts);\n    };\n  }\n  if (layout) {\n    if (layout === \"fill\") {\n      fill = true;\n    }\n    const layoutToStyle = {\n      intrinsic: {\n        maxWidth: \"100%\",\n        height: \"auto\"\n      },\n      responsive: {\n        width: \"100%\",\n        height: \"auto\"\n      }\n    };\n    const layoutToSizes = {\n      responsive: \"100vw\",\n      fill: \"100vw\"\n    };\n    const layoutStyle = layoutToStyle[layout];\n    if (layoutStyle) {\n      style = {\n        ...style,\n        ...layoutStyle\n      };\n    }\n    const layoutSizes = layoutToSizes[layout];\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes;\n    }\n  }\n  let staticSrc = \"\";\n  let widthInt = getInt(width);\n  let heightInt = getInt(height);\n  let blurWidth;\n  let blurHeight;\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src;\n    if (!staticImageData.src) {\n      throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n    }\n    blurWidth = staticImageData.blurWidth;\n    blurHeight = staticImageData.blurHeight;\n    blurDataURL = blurDataURL || staticImageData.blurDataURL;\n    staticSrc = staticImageData.src;\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width;\n        heightInt = staticImageData.height;\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width;\n        heightInt = Math.round(staticImageData.height * ratio);\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height;\n        widthInt = Math.round(staticImageData.width * ratio);\n      }\n    }\n  }\n  src = typeof src === \"string\" ? src : staticSrc;\n  let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n  if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n    // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true;\n    isLazy = false;\n  }\n  if (config.unoptimized) {\n    unoptimized = true;\n  }\n  if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true;\n  }\n  if (priority) {\n    fetchPriority = \"high\";\n  }\n  const qualityInt = getInt(quality);\n  if (process.env.NODE_ENV !== \"production\") {\n    if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n      throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true;\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n        }\n        if (height) {\n          throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n        }\n        if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n        }\n        if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n        }\n        if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n          throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n        }\n      } else {\n        if (typeof widthInt === \"undefined\") {\n          throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n        } else if (isNaN(widthInt)) {\n          throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n        }\n        if (typeof heightInt === \"undefined\") {\n          throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n        } else if (isNaN(heightInt)) {\n          throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n    }\n    if (priority && loading === \"lazy\") {\n      throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n    }\n    if (placeholder !== \"empty\" && placeholder !== \"blur\" && !placeholder.startsWith(\"data:image/\")) {\n      throw new Error('Image with src \"' + src + '\" has invalid \"placeholder\" property \"' + placeholder + '\".');\n    }\n    if (placeholder !== \"empty\") {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.');\n      }\n    }\n    if (placeholder === \"blur\" && !blurDataURL) {\n      const VALID_BLUR_EXT = [\"jpeg\", \"png\", \"webp\", \"avif\"] // should match next-image-loader\n      ;\n      throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n        Possible solutions:\\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n          - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + ' (animated images not supported)\\n          - Remove the \"placeholder\" property, effectively no blur effect\\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n    }\n    if (\"ref\" in rest) {\n      (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.');\n    }\n    if (!unoptimized && !isDefaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75\n      });\n      let url;\n      try {\n        url = new URL(urlStr);\n      } catch (err) {}\n      if (urlStr === src || url && url.pathname === src && !url.search) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n      }\n    }\n    if (onLoadingComplete) {\n      (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.');\n    }\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot\n    })) {\n      if (legacyValue) {\n        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n      }\n    }\n    if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n      perfObserver = new PerformanceObserver(entryList => {\n        for (const entry of entryList.getEntries()) {\n          var _entry_element;\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n          const lcpImage = allImgs.get(imgSrc);\n          if (lcpImage && !lcpImage.priority && lcpImage.placeholder === \"empty\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n          }\n        }\n      });\n      try {\n        perfObserver.observe({\n          type: \"largest-contentful-paint\",\n          buffered: true\n        });\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err);\n      }\n    }\n  }\n  const imgStyle = Object.assign(fill ? {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    objectFit,\n    objectPosition\n  } : {}, showAltText ? {} : {\n    color: \"transparent\"\n  }, style);\n  const backgroundImage = !blurComplete && placeholder !== \"empty\" ? placeholder === \"blur\" ? 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n    widthInt,\n    heightInt,\n    blurWidth,\n    blurHeight,\n    blurDataURL: blurDataURL || \"\",\n    objectFit: imgStyle.objectFit\n  }) + '\")' : 'url(\"' + placeholder + '\")' // assume `data:image/`\n  : null;\n  let placeholderStyle = backgroundImage ? {\n    backgroundSize: imgStyle.objectFit || \"cover\",\n    backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundImage\n  } : {};\n  if (process.env.NODE_ENV === \"development\") {\n    if (placeholderStyle.backgroundImage && placeholder === \"blur\" && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      placeholderStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n    }\n  }\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== \"undefined\") {\n      let fullUrl;\n      try {\n        fullUrl = new URL(imgAttributes.src);\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href);\n      }\n      allImgs.set(fullUrl.href, {\n        src,\n        priority,\n        placeholder\n      });\n    }\n  }\n  const props = {\n    ...rest,\n    loading: isLazy ? \"lazy\" : loading,\n    fetchPriority,\n    width: widthInt,\n    height: heightInt,\n    decoding: \"async\",\n    className,\n    style: {\n      ...imgStyle,\n      ...placeholderStyle\n    },\n    sizes: imgAttributes.sizes,\n    srcSet: imgAttributes.srcSet,\n    src: imgAttributes.src\n  };\n  const meta = {\n    unoptimized,\n    priority,\n    placeholder,\n    fill\n  };\n  return {\n    props,\n    meta\n  };\n}","map":{"version":3,"names":["getImgProps","VALID_LOADING_VALUES","undefined","isStaticRequire","src","default","isStaticImageData","isStaticImport","allImgs","Map","perfObserver","getInt","x","Number","isFinite","NaN","test","parseInt","getWidths","param","width","sizes","deviceSizes","allSizes","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","Math","min","widths","filter","s","kind","Set","map","w","find","p","generateImgAttrs","config","unoptimized","quality","loader","srcSet","last","i","join","_state","priority","loading","className","height","fill","style","onLoad","onLoadingComplete","placeholder","blurDataURL","fetchPriority","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","rest","imgConf","showAltText","blurComplete","defaultLoader","c","_imageconfig","imageConfigDefault","imageSizes","sort","a","b","isDefaultLoader","Error","customImageLoader","obj","_","opts","layoutToStyle","intrinsic","maxWidth","responsive","layoutToSizes","layoutStyle","layoutSizes","staticSrc","widthInt","heightInt","blurWidth","blurHeight","staticImageData","JSON","stringify","ratio","round","isLazy","startsWith","endsWith","dangerouslyAllowSVG","qualityInt","process","env","NODE_ENV","output","position","isNaN","includes","String","_warnonce","warnOnce","VALID_BLUR_EXT","urlStr","url","URL","err","pathname","search","legacyKey","legacyValue","Object","entries","window","PerformanceObserver","entryList","entry","getEntries","_entry_element","imgSrc","element","lcpImage","get","observe","type","buffered","console","error","imgStyle","assign","left","top","right","bottom","color","backgroundImage","_imageblursvg","getImageBlurSvg","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","imgAttributes","fullUrl","e","location","href","set","props","decoding","meta"],"sources":["../../../src/shared/lib/get-img-props.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}